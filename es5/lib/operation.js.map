{"version":3,"sources":["lib/operation.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,gB,WAAA,gB;;;;;;;0BACL,M,EAAQ;AACZ,aAAO,UAAP,CAAkB,qBAAlB,EAAyC,UAAC,MAAD,EAAY;AACnD,eAAO,IAAP,CAAY,aAAZ,EAA2B,UAAC,MAAD,EAAY;AACrC,iBAAO,KAAP,CAAa,8BAAb,EAA6C,MAA7C;AACA,iBAAO,KAAP,CAAa,cAAb;AACA,iBAAO,KAAP,CAAa,gBAAb;AACA,iBAAO,KAAP,CAAa,OAAb;AACA,iBAAO,KAAP,CAAa,MAAb;AACD,SAND;AAOD,OARD;AASD;;;;;;;;IAIU,mB,WAAA,mB;;;AACX,+BAAY,MAAZ,EAAoB;AAAA;AAAA,wHACZ,MADY;AAEnB;;;;;;YAGO,O,EACA,O,EACA,U,EAEE,Y,EACA,W,EASA,Y;;;;;;AAdF,uB,GAAU,KAAK,MAAL,CAAY,UAAZ,CAAuB,O;;uBACjB,KAAK,MAAL,CAAY,OAAZ,E;;;AAAhB,uB;AACA,0B,GAAa,QAAQ,UAAR,IAAsB,C;;sBACrC,eAAe,C;;;;;AACX,4B,GAAe,QAAQ,YAAR,IAAwB,C;;uBACnB,QAAQ,IAAR,CAAa,aAAb,EAA4B,CAAC,YAAD,CAA5B,C;;;AAApB,2B;;AACN,qBAAK,MAAL,CAAY,IAAZ,CAAiB,WAAjB;;sBACI,YAAY,QAAZ,CAAqB,EAArB,CAAwB,KAAxB,EAA+B,WAA/B,CAA2C,IAA3C,KAAoD,G;;;;;;uBAChD,KAAK,MAAL,CAAY,mBAAZ,CAAgC,WAAhC,C;;;;;;;;uBAEA,QAAQ,IAAR,CAAa,QAAb,EAAuB,KAAK,YAAL,CAAkB,QAAQ,SAA1B,CAAvB,EAA6D,IAA7D,CAAkE,KAAK,MAAL,CAAY,mBAA9E,C;;;AAER,qBAAK,MAAL,CAAY,IAAZ,CAAiB,eAAjB;;;;;;uBAE0B,QAAQ,IAAR,CAAa,QAAb,EAAuB,KAAK,YAAL,CAAkB,QAAQ,SAA1B,CAAvB,C;;;AAApB,4B;;AACN,qBAAK,MAAL,CAAY,IAAZ,CAAiB,WAAjB;;uBACM,KAAK,MAAL,CAAY,mBAAZ,CAAgC,YAAhC,C;;;AACN,qBAAK,MAAL,CAAY,IAAZ,CAAiB,eAAjB;;;;;;;;;;;;;;;;;;iCAIS,S,EAAW;AACtB,aAAO;AACL,oBAAY,SADP;AAEL,oBAAY,EAFP,E;AAGL,oBAAY,EAHP,EAAP;AAKD;;;;;;;;;;;;;;;;;;;;;;;;2BAKM,CACN;;;iCAEY,S,EAAW,CACvB;;;mCAEc,W,EAAa,CAC3B;;;;;AAGH,oCAAuB,mBAAvB,GAA6C,mBAA7C;AACA,iCAAoB,IAApB,CAAyB,gBAAzB","file":"operation.js","sourcesContent":["import {GhostKernelRoutings, GhostKernelControllers, GhostKernelController} from 'ghost-kernel';\r\n\r\nexport class OperationRouting {\r\n  setup(routes) {\r\n    routes.controller('OperationController', (routes) => {\r\n      routes.from('GhostKernel', (routes) => {\r\n        routes.event('initialize_informations_done', 'boot');\r\n        routes.event('change_shell');\r\n        routes.event('change_balloon');\r\n        routes.event('close');\r\n        routes.event('halt');\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// TODO 分け方がざっくりしている\r\nexport class OperationController extends GhostKernelController {\r\n  constructor(kernel) {\r\n    super(kernel);\r\n  }\r\n\r\n  async boot() {\r\n    const shiorif = this.kernel.components.Shiorif;\r\n    const profile = await this.kernel.profile();\r\n    const boot_count = profile.boot_count || 0;\r\n    if (boot_count === 0) {\r\n      const vanish_count = profile.vanish_count || 0;\r\n      const transaction = await shiorif.get3('OnFirstBoot', [vanish_count]);\r\n      this.kernel.emit('boot_done');\r\n      if (transaction.response.to('3.0').status_line.code === 200) {\r\n        await this.kernel.executeSakuraScript(transaction);\r\n      } else {\r\n        await shiorif.get3('OnBoot', this._bootHeaders(profile.shellname)).then(this.kernel.executeSakuraScript);\r\n      }\r\n      this.kernel.emit('boot_complete');\r\n    } else {\r\n      const transaction = await shiorif.get3('OnBoot', this._bootHeaders(profile.shellname));\r\n      this.kernel.emit('boot_done');\r\n      await this.kernel.executeSakuraScript(transaction);\r\n      this.kernel.emit('boot_complete');\r\n    }\r\n  }\r\n\r\n  _bootHeaders(shellname) {\r\n    return {\r\n      Reference0: shellname,\r\n      Reference6: '', // TODO\r\n      Reference7: '', // TODO\r\n    };\r\n  }\r\n\r\n  async close() {\r\n  }\r\n\r\n  halt() {\r\n  }\r\n\r\n  change_shell(shellname) {\r\n  }\r\n\r\n  change_balloon(balloonname) {\r\n  }\r\n}\r\n\r\nGhostKernelControllers.OperationController = OperationController;\r\nGhostKernelRoutings.push(OperationRouting);\r\n"]}