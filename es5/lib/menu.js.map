{"version":3,"sources":["lib/menu.js"],"names":[],"mappings":"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","file":"menu.js","sourcesContent":["import {GhostKernelRoutings, GhostKernelControllers, GhostKernelController} from 'ghost-kernel';\r\n\r\nexport class Menu {\r\n  constructor(kernel) {\r\n    this.kernel = kernel;\r\n  }\r\n\r\n  contextmenu(event) {\r\n    const scopeId = event.scopeId;\r\n    return {\r\n      items: {\r\n        changeGhost: {name: 'ゴースト切り替え', items: this.changeGhost()},\r\n        callGhost: {name: '他のゴーストを呼ぶ', items: this.callGhost()},\r\n        changeShell: {name: 'シェル', items: this.changeShell()},\r\n        changeBalloon: {name: 'バルーン', items: this.changeBalloon()},\r\n        inputScript: {name: '開発用 スクリプト入力', callback: () => this.kernel.components.SakuraScriptExecuter.execute(window.prompt('send'))},\r\n        quit: {name: '終了', callback: () => this.kernel.close('user')},\r\n        quitAll: {name: '全て終了', callback: () => this.kernel.components.NamedKernelManager.close('user')},\r\n      },\r\n    };\r\n  }\r\n\r\n  changeGhost() {\r\n    const namedKernelManager = this.kernel.components.NamedKernelManager;\r\n    const ghosts = namedKernelManager.components.GhostList.list;\r\n    const menu = {};\r\n    ghosts.forEach(([name, dirpath]) => {\r\n      const disabled = namedKernelManager.isKernelExists(dirpath) && !this.kernel.namedId === dirpath;\r\n      menu[`changeGhost-${dirpath}`] = {\r\n        name,\r\n        disabled,\r\n        callback() {\r\n          // TODO\r\n        },\r\n      };\r\n    });\r\n    return menu;\r\n  }\r\n\r\n  callGhost() {\r\n    const namedKernelManager = this.kernel.components.NamedKernelManager;\r\n    const ghosts = namedKernelManager.components.GhostList.list;\r\n    const menu = {};\r\n    ghosts.forEach(([name, dirpath]) => {\r\n      const disabled = namedKernelManager.isKernelExists(dirpath);\r\n      menu[`callGhost-${dirpath}`] = {\r\n        name,\r\n        disabled,\r\n        callback() {\r\n          // TODO\r\n        },\r\n      };\r\n    });\r\n    return menu;\r\n  }\r\n\r\n  changeShell() {\r\n    const namedKernelManager = this.kernel.components.NamedKernelManager;\r\n    const shells = namedKernelManager.components.ShellList.list[this.kernel.namedId];\r\n    const menu = {};\r\n    if (!shells) return menu;\r\n    const currentShellName = this.kernel.components.Named.shell.descript.name;\r\n    shells.forEach(([name, dirpath]) => {\r\n      const disabled = currentShellName === name;\r\n      menu[`callShell-${dirpath}`] = {\r\n        name,\r\n        disabled,\r\n        callback: () => this.kernel.changeShell(dirpath),\r\n      };\r\n    });\r\n    return menu;\r\n  }\r\n\r\n  changeBalloon() {\r\n    const namedKernelManager = this.kernel.components.NamedKernelManager;\r\n    const balloons = namedKernelManager.components.BalloonList.list;\r\n    const menu = {};\r\n    const currentBalloonName = this.kernel.components.Named.balloon.descript.name;\r\n    balloons.forEach(([name, dirpath]) => {\r\n      const disabled = currentBalloonName === name;\r\n      menu[`changeBalloon-${dirpath}`] = {\r\n        name,\r\n        disabled,\r\n        callback: () => this.kernel.changeBalloon(dirpath),\r\n      };\r\n    });\r\n    return menu;\r\n  }\r\n}\r\n\r\nexport class MenuRouting {\r\n  setup(routes) {\r\n    routes.controller('MenuController', (routes) => {\r\n      routes.event('GhostKernel', 'start');\r\n      // TODO: 仕様上shellの右クリックを捕捉するべきだが現状のcuttlebone実装上マネージャのstartでハンドラを登録する\r\n    });\r\n  }\r\n}\r\n\r\nexport class MenuController extends GhostKernelController {\r\n  constructor(kernel) {\r\n    super(kernel);\r\n  }\r\n\r\n  start() {\r\n    const menu = new Menu(this.kernel);\r\n    this.kernel.components.Named.contextmenu(menu.contextmenu.bind(menu));\r\n  }\r\n}\r\n\r\nGhostKernelControllers.MenuController = MenuController;\r\nGhostKernelRoutings.push(MenuRouting);\r\n"]}